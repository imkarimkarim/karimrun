---
import { Image } from '@astrojs/image/components';
---

<header class='text-center'>
	<!-- TODO three.js(prank) -->
	<a
		title='do not click on me!'
		target='_blank'
		href='https://www.reddit.com/r/ProgrammerHumor/comments/12hl37d/god_why_is_coding_chess_so_hard/'>
		<Image
			class='w-32 h-32 dark:w-24 dark:h-24 inline m-2 dark:m-6 mix-blend-darken dark:mix-blend-normal'
			width={516}
			height={516}
			format={'png'}
			src='/images/avatar.png'
			alt='karim avatar'
		/>
	</a>
	<h1 class='text-3xl font-bold font-sans m-2'>
		what's up<Image
			title='Hiiiiiiiiiiiiiiii!'
			class='w-7 h-7 sm:w-8 sm:h-8 inline wave mr-1'
			width={100}
			height={100}
			format={'png'}
			src='/emojis/waving-hand.png'
			alt='ðŸ‘‹'
		/> im karim
	</h1>
	<span title='crawiling outgrowth ðŸ”­ telegram channel' class='text-2xl'
		>a internet crawler <a target='_blank' href='https://t.me/crawlingoutgrowth'
			><Image
				class='w-5 h-5 sm:w-6 sm:h-6 inline mr-1 transform -scale-x-100'
				width={100}
				height={100}
				format={'png'}
				src='/emojis/telescope.png'
				alt='ðŸ”­'
			/></a
		><p class='text-xl'>Front-End developer</p><p class='text-xl font-extralight'>and Linux user</p></span
	>
	<a title='WakaTime stats' target='_blank' href='https://wakatime.com/@imkarimkarim'>
		<span class='font-extralight text-xs text-gray-600 dark:text-gray-400 font-mono' id='coded'>...</span>
	</a>
	<span class='tooltip' id='tooltip'>
		<Image
			class='w-4 h-4 inline mr-1 transform -scale-x-100'
			width={47}
			height={47}
			format={'png'}
			src='/emojis/info.png'
			alt='info'
		/>
		<span class='tooltiptext text-sm font-sans cursor-auto'
			><h3>
				This Info May Not Be Accurate! <span
					onclick="alert('This information is being updated every 15 minutes by a script, running on my local machine. Due to Internet restrictions set by the government in Iran, there may be instances where the script cannot perform well.')"
					class='underline cursor-pointer'>(Read More)</span
				>
			</h3></span
		>
	</span>
</header>

<style>
	/* copied from https://codepen.io/jakejarvis/pen/pBZWZw  */
	.wave {
		animation-name: wave-animation; /* Refers to the name of your @keyframes element below */
		animation-duration: 2.5s; /* Change to speed up or slow down */
		animation-iteration-count: 2;
		transform-origin: 70% 70%; /* Pivot around the bottom-left palm */
		display: inline-block;
		cursor: pointer;
	}

	@keyframes wave-animation {
		0% {
			transform: rotate(0deg);
		}
		10% {
			transform: rotate(14deg);
		} /* The following five values can be played with to make the waving more or less extreme */
		20% {
			transform: rotate(-8deg);
		}
		30% {
			transform: rotate(14deg);
		}
		40% {
			transform: rotate(-4deg);
		}
		50% {
			transform: rotate(10deg);
		}
		60% {
			transform: rotate(0deg);
		} /* Reset for the last half to pause */
		100% {
			transform: rotate(0deg);
		}
	}

	.tooltip {
		cursor: pointer;
		position: relative;
		display: none;
	}

	.tooltip .tooltiptext {
		display: none;
		width: 170px;
		color: rgb(229 231 235);
		background-color: #181c25;
		box-shadow: 0 0 20px 0px #ffffff3d;
		border: 1px solid rgb(229 231 235 / 70%);
		border-radius: 10px;
		padding: 10px;
		position: absolute;
		z-index: 1;
		bottom: 100%;
		left: 50%;
		margin-left: -160px;
	}

	.tooltip:hover .tooltiptext {
		display: block;
	}
</style>

<script>
	let flag = true;
	const codedEl = document.getElementById('coded');
	function animateSteps() {
		let steps = 3;
		let dots = '';

		for (let i = 0; i < steps; i++) {
			setTimeout(function () {
				if (!flag) return;
				dots += '.';
				codedEl.innerText = dots;
			}, 400 * (i + 1));
		}
	}
	const iv = setInterval(() => {
		animateSteps();
	}, 1200);

	fetch('https://api.github.com/users/imkarimkarim')
		.then((res) => {
			if (res.status === 200) {
				return res.json();
			}
		})
		.then((data) => {
			const bio = data.bio;
			const coded = bio.split(',')[1].slice(1);
			flag = false;
			clearInterval(iv);
			codedEl.innerText = 'who ' + coded;
			document.getElementById('tooltip').style.display = 'inline-block';
		})
		.catch((errr) => {
			console.error(errr);
			flag = false;
			clearInterval(iv);
			codedEl.innerText = '';
		});

	const wave = document.querySelector('.wave');
	wave.addEventListener('click', () => {
		wave.classList.remove('wave');
		// @ts-ignore
		void wave.offsetWidth; // Trigger a reflow
		wave.classList.add('wave');
	});
</script>
