---
import Head from "../components/Head.astro";
import Socials from "../components/index/socials.astro";
import {SITE_DESCRIPTION, SITE_TITLE} from '../consts'
import Body from '../components/Body.astro'
import { Image } from 'astro:assets';

---


<!doctype html>
<html lang="en">
  <Head title={SITE_TITLE} description={SITE_DESCRIPTION} />
  <Body>
    <main class='flex flex-col gap-2 h-screen w-full justify-center align-middle'>
      <div class='text-center'>
        <!-- TODO three.js(prank) -->
        <a
          title='do not click on me!'
          target='_blank'
          href='https://www.reddit.com/r/ProgrammerHumor/comments/12hl37d/god_why_is_coding_chess_so_hard/'>
          <Image
            class='w-32 h-32 dark:w-24 dark:h-24 inline m-2 dark:m-6 mix-blend-darken dark:mix-blend-normal'
            width={516}
            height={516}
            format={'png'}
            src='/images/avatar.png'
            alt='karim avatar'
          />
        </a>
        <h1 class='text-2xl font-bold m-2'>
          what's up<Image
            title='Hiiiiiiiiiiiiiiii!'
            class='w-7 h-7 sm:w-8 sm:h-8 inline wave mr-1'
            width={100}
            height={100}
            format={'png'}
            src='/emojis/waving-hand.png'
            alt='ðŸ‘‹'
          /> im karim
        </h1>
        <span class='text-xl'
          >a internet crawler <a target='_blank' href='https://t.me/crawlingoutgrowth'
            ><Image
              title='crawiling outgrowth ðŸ”­ telegram channel'	class='w-5 h-5 sm:w-6 sm:h-6 inline mr-1 transform -scale-x-100'
              width={100}
              height={100}
              format={'png'}
              src='/emojis/telescope.png'
              alt='ðŸ”­'
            /></a
          ><p class='text-lg'>Front-End developer</p><p class='text-lg font-light dark:font-extralight'>and Linux user</p></span
        >
        <a title='WakaTime stats' target='_blank' href='https://wakatime.com/@imkarimkarim'>
          <span class='text-base font-light dark:font-extralight' id='coded'>...</span>
        </a>
        <span class='tooltip' id='tooltip'>
          <Image
            class='w-4 h-4 inline mx-1 mb-[2px] transform -scale-x-100'
            width={47}
            height={47}
            format={'png'}
            src='/emojis/info.png'
            alt='info'
          />
          <span class='tooltiptext text-sm  cursor-auto'
            ><h3>
              This Info May Not Be Accurate! <br /><span
                onclick="alert('This information is being updated every 15 minutes by a script, running on my local machine. Due to Internet restrictions set by the government in Iran, there may be instances where the script cannot perform well.')"
                class='underline cursor-pointer'>(Read More)</span
              >
            </h3></span
          >
        </span>
      </div>
      <br />
      <Socials />
    </main>
  </Body>
</html>


<style>
	/* copied from https://codepen.io/jakejarvis/pen/pBZWZw  */
	.wave {
		animation-name: wave-animation; /* Refers to the name of your @keyframes element below */
		animation-duration: 2.5s; /* Change to speed up or slow down */
		animation-iteration-count: 3;
		transform-origin: 70% 70%; /* Pivot around the bottom-left palm */
		display: inline-block;
		cursor: pointer;
	}

	@keyframes wave-animation {
		0% {
			transform: rotate(0deg);
		}
		10% {
			transform: rotate(14deg);
		} /* The following five values can be played with to make the waving more or less extreme */
		20% {
			transform: rotate(-8deg);
		}
		30% {
			transform: rotate(14deg);
		}
		40% {
			transform: rotate(-4deg);
		}
		50% {
			transform: rotate(10deg);
		}
		60% {
			transform: rotate(0deg);
		} /* Reset for the last half to pause */
		100% {
			transform: rotate(0deg);
		}
	}

	.tooltip {
		cursor: pointer;
		position: relative;
		display: none;
	}

	.tooltip .tooltiptext {
		display: none;
		width: 170px;
		color: rgb(229 231 235);
		background-color: #181c25;
		box-shadow: 0 0 20px 0px #ffffff3d;
		border: 1px solid rgb(229 231 235 / 70%);
		border-radius: 10px;
		padding: 10px;
		position: absolute;
		z-index: 1;
		bottom: 100%;
		left: 50%;
		margin-left: -160px;
	}

	.tooltip:hover .tooltiptext {
		display: block;
	}
</style>

<script>
	let flag = true;
	const codedEl = document.getElementById('coded');
	function animateSteps() {
		let steps = 3;
		let dots = '';

		for (let i = 0; i < steps; i++) {
			setTimeout(function () {
				if (!flag) return;
				dots += '.';
				if(codedEl){
				codedEl.innerText = dots;}
			}, 400 * (i + 1));
		}
	}
	const iv = setInterval(() => {
		animateSteps();
	}, 1200);

	fetch('https://api.github.com/users/imkarimkarim')
		.then((res) => {
			if (res.status === 200) {
				return res.json();
			}
		})
		.then((data) => {
			const bio = data.bio;
			const coded = bio.split(',')[1].slice(1);
			flag = false;
			clearInterval(iv);
			if(codedEl){
			codedEl.innerText = 'who ' + coded;
		}
		const tooltip = document.getElementById('tooltip');
		if(tooltip){
			tooltip.style.display = 'inline-block';
		} 
		})
		.catch((errr) => {
			console.error(errr);
			flag = false;
			clearInterval(iv);
			if(codedEl){
			codedEl.innerText = '';}
		});

	const wave = document.querySelector('.wave');
	if(wave){
	wave.addEventListener('click', () => {
		wave.classList.remove('wave');
		// @ts-ignore
		void wave.offsetWidth; // Trigger a reflow
		wave.classList.add('wave');
		
	});
}
</script>
